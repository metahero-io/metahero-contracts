{
  "address": "0xdbFed9a593B3C6aCF5943ACfF208769c6D8fE5fF",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "excludeSenderFromFee",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "excludeRecipientFromFee",
          "type": "bool"
        }
      ],
      "name": "AccountExcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "ControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PresaleFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRewards",
          "type": "uint256"
        }
      ],
      "name": "TotalRewardsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "excludeSenderFromFee",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "excludeRecipientFromFee",
          "type": "bool"
        }
      ],
      "name": "excludeAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishPresale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getBalanceSummary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "holdingBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "sender",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipient",
              "type": "uint256"
            }
          ],
          "internalType": "struct HEROToken.Fees",
          "name": "burnFees",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "sender",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipient",
              "type": "uint256"
            }
          ],
          "internalType": "struct HEROToken.Fees",
          "name": "lpFees",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "sender",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipient",
              "type": "uint256"
            }
          ],
          "internalType": "struct HEROToken.Fees",
          "name": "rewardsFees",
          "type": "tuple"
        },
        {
          "internalType": "address payable",
          "name": "lpManager_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "controller_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "excludedAccounts_",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpManager",
      "outputs": [
        {
          "internalType": "contract HEROLPManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "sender",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipient",
              "type": "uint256"
            }
          ],
          "internalType": "struct HEROToken.Fees",
          "name": "burnFees",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "sender",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipient",
              "type": "uint256"
            }
          ],
          "internalType": "struct HEROToken.Fees",
          "name": "lpFees",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "sender",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipient",
              "type": "uint256"
            }
          ],
          "internalType": "struct HEROToken.Fees",
          "name": "rewardsFees",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "summary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalExcluded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalHolding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x05baa6729592057d69acd23c748cfb12bda0fa1713e2b988abba1ea2fc496750",
  "receipt": {
    "to": null,
    "from": "0x2101F46D23b84eEa6a310B1dBa58f66DCE17A0Cf",
    "contractAddress": "0xdbFed9a593B3C6aCF5943ACfF208769c6D8fE5fF",
    "transactionIndex": 1,
    "gasUsed": "4106217",
    "logsBloom": "0x
    "blockHash": "0xed91a2033030aefcc807a0430928725fcdab8442d463dd70e4862a00b14211e2",
    "transactionHash": "0x05baa6729592057d69acd23c748cfb12bda0fa1713e2b988abba1ea2fc496750",
    "logs": [],
    "blockNumber": 9958475,
    "cumulativeGasUsed": "4237535",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "9c597f66d696fe7cac7d8b6303648883",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"excludeSenderFromFee\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"excludeRecipientFromFee\",\"type\":\"bool\"}],\"name\":\"AccountExcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresaleFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"}],\"name\":\"TotalRewardsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excludeSenderFromFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"excludeRecipientFromFee\",\"type\":\"bool\"}],\"name\":\"excludeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalanceSummary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"holdingBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipient\",\"type\":\"uint256\"}],\"internalType\":\"struct HEROToken.Fees\",\"name\":\"burnFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipient\",\"type\":\"uint256\"}],\"internalType\":\"struct HEROToken.Fees\",\"name\":\"lpFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipient\",\"type\":\"uint256\"}],\"internalType\":\"struct HEROToken.Fees\",\"name\":\"rewardsFees\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"lpManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"excludedAccounts_\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpManager\",\"outputs\":[{\"internalType\":\"contract HEROLPManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipient\",\"type\":\"uint256\"}],\"internalType\":\"struct HEROToken.Fees\",\"name\":\"burnFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipient\",\"type\":\"uint256\"}],\"internalType\":\"struct HEROToken.Fees\",\"name\":\"lpFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sender\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipient\",\"type\":\"uint256\"}],\"internalType\":\"struct HEROToken.Fees\",\"name\":\"rewardsFees\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"summary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalExcluded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalHolding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Public constructor\"}},\"title\":\"HERO token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HEROToken.sol\":\"HEROToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/HEROLPManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\nimport \\\"./access/Owned.sol\\\";\\nimport \\\"./lifecycle/Initializable.sol\\\";\\nimport \\\"./math/MathLib.sol\\\";\\nimport \\\"./HEROToken.sol\\\";\\n\\n\\n/**\\n * @title HERO abstract liquidity pool manager\\n */\\nabstract contract HEROLPManager is Owned, Initializable {\\n  using MathLib for uint256;\\n\\n  HEROToken public token;\\n\\n  bool internal swapLocked;\\n\\n  /**\\n   * @dev Internal constructor\\n   */\\n  constructor ()\\n    internal\\n    Owned()\\n    Initializable()\\n  {\\n    //\\n  }\\n\\n  // external functions\\n\\n  receive()\\n    external\\n    payable\\n  {\\n    //\\n  }\\n\\n  function syncLP()\\n    external\\n  {\\n    if (!swapLocked) {\\n      swapLocked = true;\\n\\n      _syncLP();\\n\\n      swapLocked = false;\\n    }\\n  }\\n\\n  function burnLP(\\n    uint256 amount\\n  )\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      amount != 0,\\n      \\\"HEROLPManager#1\\\"\\n    );\\n\\n    require(\\n      !swapLocked,\\n      \\\"HEROLPManager#2\\\"\\n    );\\n\\n    swapLocked = true;\\n\\n    _burnLP(amount);\\n\\n    swapLocked = false;\\n  }\\n\\n  // external functions (views)\\n\\n  function canSyncLP(\\n    address participant\\n  )\\n    external\\n    view\\n    virtual\\n    returns (bool);\\n\\n  // internal functions\\n\\n  function _initialize(\\n    address token_\\n  )\\n    internal\\n  {\\n    require(\\n      token_ != address(0),\\n      \\\"HEROLPManager#3\\\"\\n    );\\n\\n    token = HEROToken(token_);\\n  }\\n\\n  function _syncLP()\\n    internal\\n    virtual;\\n\\n  function _burnLP(\\n    uint256 amount\\n  )\\n    internal\\n    virtual;\\n}\\n\",\"keccak256\":\"0xffbc3295272031394669c3b65ac4a1561f943b823dc78e705962a4beb109e53c\",\"license\":\"MIT\"},\"src/HEROToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./access/Controlled.sol\\\";\\nimport \\\"./access/Owned.sol\\\";\\nimport \\\"./erc20/ERC20.sol\\\";\\nimport \\\"./lifecycle/Initializable.sol\\\";\\nimport \\\"./math/MathLib.sol\\\";\\nimport \\\"./HEROLPManager.sol\\\";\\n\\n\\n/**\\n * @title HERO token\\n */\\ncontract HEROToken is Controlled, Owned, ERC20, Initializable {\\n  using MathLib for uint256;\\n\\n  struct Fees {\\n    uint256 sender; // percent\\n    uint256 recipient; // percent\\n  }\\n\\n  struct Settings {\\n    Fees burnFees;\\n    Fees lpFees;\\n    Fees rewardsFees;\\n  }\\n\\n  struct Summary {\\n    uint256 totalExcluded;\\n    uint256 totalHolding;\\n    uint256 totalRewards;\\n    uint256 totalSupply;\\n  }\\n\\n  struct ExcludedAccount {\\n    bool exists;\\n    bool excludeSenderFromFee;\\n    bool excludeRecipientFromFee;\\n  }\\n\\n  // metadata\\n\\n  string private constant TOKEN_NAME = \\\"Metahero\\\";\\n  string private constant TOKEN_SYMBOL = \\\"HERO\\\";\\n  uint8 private constant TOKEN_DECIMALS = 18; // 0.000000000000000000\\n\\n  HEROLPManager public lpManager;\\n  Settings public settings;\\n  Summary public summary;\\n  bool public presaleFinished;\\n\\n  mapping (address => uint256) private accountBalances;\\n  mapping (address => mapping (address => uint256)) private accountAllowances;\\n  mapping (address => ExcludedAccount) private excludedAccounts;\\n\\n  // events\\n\\n  event PresaleFinished();\\n\\n  event AccountExcluded(\\n    address indexed account,\\n    bool excludeSenderFromFee,\\n    bool excludeRecipientFromFee\\n  );\\n\\n  event TotalRewardsUpdated(\\n    uint256 totalRewards\\n  );\\n\\n  /**\\n   * @dev Public constructor\\n   */\\n  constructor ()\\n    public\\n    Controlled()\\n    Owned()\\n    ERC20(TOKEN_NAME, TOKEN_SYMBOL, TOKEN_DECIMALS)\\n    Initializable()\\n  {\\n    //\\n  }\\n\\n  // external functions\\n\\n  function initialize(\\n    Fees memory burnFees,\\n    Fees memory lpFees,\\n    Fees memory rewardsFees,\\n    address payable lpManager_,\\n    address controller_,\\n    uint256 totalSupply_,\\n    address[] calldata excludedAccounts_\\n  )\\n    external\\n    onlyInitializer\\n  {\\n    settings.burnFees = burnFees;\\n    settings.lpFees = lpFees;\\n    settings.rewardsFees = rewardsFees;\\n\\n    if (\\n      lpFees.sender != 0 ||\\n      lpFees.recipient != 0\\n    ) {\\n      require(\\n        lpManager_ != address(0),\\n        \\\"HEROToken#1\\\"\\n      );\\n\\n      lpManager = HEROLPManager(lpManager_);\\n\\n      _excludeAccount(lpManager_, false, false);\\n    }\\n\\n    _initializeController(controller_);\\n\\n    if (totalSupply_ != 0) {\\n      _excludeAccount(msg.sender, true, true);\\n\\n      _mint(\\n        msg.sender,\\n        totalSupply_\\n      );\\n    }\\n\\n    uint256 excludedAccountsLen = excludedAccounts_.length;\\n\\n    for (uint256 index; index < excludedAccountsLen; index++) {\\n      _excludeAccount(excludedAccounts_[index], false, false);\\n    }\\n  }\\n\\n  function finishPresale()\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      !presaleFinished,\\n      \\\"HEROToken#2\\\"\\n    );\\n\\n    presaleFinished = true;\\n\\n    emit PresaleFinished();\\n  }\\n\\n  function excludeAccount(\\n    address account,\\n    bool excludeSenderFromFee,\\n    bool excludeRecipientFromFee\\n  )\\n    external\\n    onlyOwner\\n  {\\n    _excludeAccount(\\n      account,\\n      excludeSenderFromFee,\\n      excludeRecipientFromFee\\n    );\\n  }\\n\\n  function approve(\\n    address spender,\\n    uint256 amount\\n  )\\n    external\\n    override\\n    returns (bool)\\n  {\\n    _approve(\\n      msg.sender,\\n      spender,\\n      amount\\n    );\\n\\n    return true;\\n  }\\n\\n  function mint(\\n    address account,\\n    uint256 amount\\n  )\\n    external\\n    onlyController\\n  {\\n    _mint(\\n      account,\\n      amount\\n    );\\n  }\\n\\n  function burn(\\n    uint256 amount\\n  )\\n    external\\n  {\\n    _burn(\\n      msg.sender,\\n      amount\\n    );\\n  }\\n\\n  function transfer(\\n    address recipient,\\n    uint256 amount\\n  )\\n    external\\n    override\\n    returns (bool)\\n  {\\n    _transfer(\\n      msg.sender,\\n      recipient,\\n      amount\\n    );\\n\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    external\\n    override\\n    returns (bool)\\n  {\\n    _transfer(\\n      sender,\\n      recipient,\\n      amount\\n    );\\n\\n    uint256 allowance = accountAllowances[sender][msg.sender];\\n\\n    require(\\n      allowance >= amount,\\n      \\\"HEROToken#3\\\"\\n    );\\n\\n    _approve(\\n      sender,\\n      msg.sender,\\n      allowance.sub(amount)\\n    );\\n\\n    return true;\\n  }\\n\\n  // external functions (views)\\n\\n  function totalSupply()\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    return summary.totalSupply;\\n  }\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    return accountAllowances[owner][spender];\\n  }\\n\\n  function balanceOf(\\n    address account\\n  )\\n    external\\n    view\\n    override\\n    returns (uint256 result)\\n  {\\n    result = accountBalances[account].add(\\n      _calcRewards(account)\\n    );\\n\\n    return result;\\n  }\\n\\n  function getBalanceSummary(\\n    address account\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 totalBalance,\\n      uint256 holdingBalance,\\n      uint256 totalRewards\\n    )\\n  {\\n    holdingBalance = accountBalances[account];\\n    totalRewards = _calcRewards(account);\\n    totalBalance = holdingBalance.add(totalRewards);\\n\\n    return (totalBalance, holdingBalance, totalRewards);\\n  }\\n\\n  // private functions\\n\\n  function _excludeAccount(\\n    address account,\\n    bool excludeSenderFromFee,\\n    bool excludeRecipientFromFee\\n  )\\n    private\\n  {\\n    require(\\n      account != address(0),\\n      \\\"HEROToken#4\\\"\\n    );\\n\\n    if (excludedAccounts[account].exists) {\\n      require(\\n        excludedAccounts[account].excludeSenderFromFee != excludeSenderFromFee ||\\n        excludedAccounts[account].excludeRecipientFromFee != excludeRecipientFromFee,\\n        \\\"HEROToken#5\\\"\\n      );\\n\\n      excludedAccounts[account].excludeSenderFromFee = excludeSenderFromFee;\\n      excludedAccounts[account].excludeRecipientFromFee = excludeRecipientFromFee;\\n    } else {\\n      require(\\n        accountBalances[account] == 0,\\n        \\\"HEROToken#6\\\"\\n      );\\n\\n      excludedAccounts[account].exists = true;\\n      excludedAccounts[account].excludeSenderFromFee = excludeSenderFromFee;\\n      excludedAccounts[account].excludeRecipientFromFee = excludeRecipientFromFee;\\n    }\\n\\n    emit AccountExcluded(\\n      account,\\n      excludeSenderFromFee,\\n      excludeRecipientFromFee\\n    );\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    require(\\n      owner != address(0),\\n      \\\"HEROToken#7\\\"\\n    );\\n\\n    require(\\n      spender != address(0),\\n      \\\"HEROToken#8\\\"\\n    );\\n\\n    accountAllowances[owner][spender] = amount;\\n\\n    emit Approval(\\n      owner,\\n      spender,\\n      amount\\n    );\\n  }\\n\\n  function _mint(\\n    address account,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    require(\\n      account != address(0),\\n      \\\"HEROToken#9\\\"\\n    );\\n\\n    require(\\n      amount != 0,\\n      \\\"HEROToken#10\\\"\\n    );\\n\\n    require(\\n      excludedAccounts[account].exists,\\n      \\\"HEROToken#11\\\"\\n    );\\n\\n    summary.totalSupply = summary.totalSupply.add(amount);\\n    summary.totalExcluded = summary.totalExcluded.add(amount);\\n\\n    accountBalances[account] = accountBalances[account].add(amount);\\n\\n    _emitTransfer(\\n      address(0),\\n      account,\\n      amount\\n    );\\n  }\\n\\n  function _burn(\\n    address account,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    require(\\n      account != address(0),\\n      \\\"HEROToken#12\\\"\\n    );\\n\\n    require(\\n      amount != 0,\\n      \\\"HEROToken#13\\\"\\n    );\\n\\n    require(\\n      accountBalances[account] >= amount,\\n      \\\"HEROToken#14\\\"\\n    );\\n\\n    require(\\n      excludedAccounts[account].exists,\\n      \\\"HEROToken#15\\\"\\n    );\\n\\n    accountBalances[account] = accountBalances[account].sub(amount);\\n\\n    summary.totalSupply = summary.totalSupply.sub(amount);\\n    summary.totalExcluded = summary.totalExcluded.sub(amount);\\n\\n    _emitTransfer(\\n      account,\\n      address(0),\\n      amount\\n    );\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    require(\\n      sender != address(0),\\n      \\\"HEROToken#16\\\"\\n    );\\n\\n    require(\\n      recipient != address(0),\\n      \\\"HEROToken#17\\\"\\n    );\\n\\n    require(\\n      sender != recipient,\\n      \\\"HEROToken#18\\\"\\n    );\\n\\n    require(\\n      amount != 0,\\n      \\\"HEROToken#19\\\"\\n    );\\n\\n    require(\\n      excludedAccounts[sender].exists ||\\n      presaleFinished,\\n      \\\"HEROToken#20\\\"\\n    );\\n\\n    if (\\n      !excludedAccounts[sender].exists &&\\n      !excludedAccounts[recipient].exists\\n    ) {\\n      _transferBetweenHolderAccounts(\\n        sender,\\n        recipient,\\n        amount\\n      );\\n    } else if (\\n      excludedAccounts[sender].exists &&\\n      !excludedAccounts[recipient].exists\\n    ) {\\n      _transferFromExcludedAccount(\\n        sender,\\n        recipient,\\n        amount\\n      );\\n    } else if (\\n      !excludedAccounts[sender].exists &&\\n      excludedAccounts[recipient].exists\\n    ) {\\n      _transferToExcludedAccount(\\n        sender,\\n        recipient,\\n        amount\\n      );\\n    } else {\\n      _transferBetweenExcludedAccounts(\\n        sender,\\n        recipient,\\n        amount\\n      );\\n    }\\n  }\\n\\n  function _transferBetweenHolderAccounts(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    uint256 senderAmount;\\n    uint256 senderBurnFee;\\n    uint256 senderLpFee;\\n\\n    uint256 recipientAmount;\\n    uint256 recipientBurnFee;\\n    uint256 recipientLpFee;\\n\\n    uint256 totalFee;\\n    uint256 totalLP;\\n\\n    {\\n      uint256 senderTotalFee;\\n      uint256 recipientTotalFee;\\n\\n      (\\n        senderTotalFee,\\n        senderBurnFee,\\n        senderLpFee\\n      ) = _calcTransferSenderFees(amount);\\n\\n      (\\n        recipientTotalFee,\\n        recipientBurnFee,\\n        recipientLpFee\\n      ) = _calcTransferRecipientFees(amount);\\n\\n      totalFee = senderTotalFee.add(recipientTotalFee);\\n      totalLP = senderLpFee.add(recipientLpFee);\\n      senderAmount = amount.add(senderTotalFee);\\n      recipientAmount = amount.sub(recipientTotalFee);\\n    }\\n\\n    if (summary.totalRewards != 0) {\\n      uint256 totalHoldingWithRewards = summary.totalHolding.add(\\n        summary.totalRewards\\n      );\\n\\n      senderAmount = senderAmount.mul(summary.totalHolding).div(\\n        totalHoldingWithRewards\\n      );\\n      recipientAmount = recipientAmount.mul(summary.totalHolding).div(\\n        totalHoldingWithRewards\\n      );\\n      totalFee = totalFee.mul(summary.totalHolding).div(\\n        totalHoldingWithRewards\\n      );\\n    }\\n\\n    require(\\n      accountBalances[sender] >= senderAmount,\\n      \\\"HEROToken#21\\\"\\n    );\\n\\n    accountBalances[sender] = accountBalances[sender].sub(senderAmount);\\n    accountBalances[recipient] = accountBalances[recipient].add(recipientAmount);\\n\\n    _emitTransfer(\\n      sender,\\n      recipient,\\n      amount\\n    );\\n\\n    _emitTransfer(\\n      sender,\\n      address(0),\\n      senderBurnFee\\n    );\\n\\n    _emitTransfer(\\n      sender,\\n      address(lpManager),\\n      senderLpFee\\n    );\\n\\n    _emitTransfer(\\n      recipient,\\n      address(0),\\n      recipientBurnFee\\n    );\\n\\n    _emitTransfer(\\n      recipient,\\n      address(lpManager),\\n      recipientLpFee\\n    );\\n\\n    summary.totalSupply = summary.totalSupply.sub(senderBurnFee).sub(recipientBurnFee);\\n    summary.totalHolding = summary.totalHolding.sub(totalFee);\\n\\n    _increaseTotalLP(totalLP);\\n\\n    _updateTotalRewards();\\n\\n    _syncLP(address(0), totalLP);\\n  }\\n\\n  function _transferFromExcludedAccount(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    require(\\n      accountBalances[sender] >= amount,\\n      \\\"HEROToken#22\\\"\\n    );\\n\\n    uint256 recipientTotalFee;\\n    uint256 recipientBurnFee;\\n    uint256 recipientLPFee;\\n\\n    if (!excludedAccounts[sender].excludeRecipientFromFee) {\\n      (\\n        recipientTotalFee,\\n        recipientBurnFee,\\n        recipientLPFee\\n      ) = _calcTransferRecipientFees(amount);\\n    }\\n\\n    uint256 recipientAmount = amount.sub(recipientTotalFee);\\n\\n    accountBalances[sender] = accountBalances[sender].sub(amount);\\n    accountBalances[recipient] = accountBalances[recipient].add(recipientAmount);\\n\\n    _emitTransfer(\\n      sender,\\n      recipient,\\n      amount\\n    );\\n\\n    _emitTransfer(\\n      recipient,\\n      address(0),\\n      recipientBurnFee\\n    );\\n\\n    _emitTransfer(\\n      recipient,\\n      address(lpManager),\\n      recipientLPFee\\n    );\\n\\n    summary.totalSupply = summary.totalSupply.sub(recipientBurnFee);\\n    summary.totalExcluded = summary.totalExcluded.sub(amount);\\n    summary.totalHolding = summary.totalHolding.add(recipientAmount);\\n\\n    _increaseTotalLP(recipientLPFee);\\n\\n    _updateTotalRewards();\\n\\n    _syncLP(sender, recipientLPFee);\\n  }\\n\\n  function _transferToExcludedAccount(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    uint256 senderTotalFee;\\n    uint256 senderBurnFee;\\n    uint256 senderLpFee;\\n\\n    if (!excludedAccounts[recipient].excludeSenderFromFee) {\\n      (\\n        senderTotalFee,\\n        senderBurnFee,\\n        senderLpFee\\n      ) = _calcTransferSenderFees(amount);\\n    }\\n\\n    uint256 senderAmount = amount.add(senderTotalFee);\\n\\n    if (summary.totalRewards != 0) {\\n      uint256 totalHoldingWithRewards = summary.totalHolding.add(\\n        summary.totalRewards\\n      );\\n\\n      senderAmount = senderAmount.mul(summary.totalHolding).div(\\n        totalHoldingWithRewards\\n      );\\n    }\\n\\n    require(\\n      accountBalances[sender] >= senderAmount,\\n      \\\"HEROToken#23\\\"\\n    );\\n\\n    accountBalances[sender] = accountBalances[sender].sub(senderAmount);\\n    accountBalances[recipient] = accountBalances[recipient].add(amount);\\n\\n    _emitTransfer(\\n      sender,\\n      recipient,\\n      amount\\n    );\\n\\n    _emitTransfer(\\n      sender,\\n      address(0),\\n      senderBurnFee\\n    );\\n\\n    _emitTransfer(\\n      sender,\\n      address(lpManager),\\n      senderLpFee\\n    );\\n\\n    summary.totalSupply = summary.totalSupply.sub(senderBurnFee);\\n    summary.totalExcluded = summary.totalExcluded.add(amount);\\n    summary.totalHolding = summary.totalHolding.sub(senderAmount);\\n\\n    _increaseTotalLP(senderLpFee);\\n\\n    _updateTotalRewards();\\n\\n    _syncLP(recipient, senderLpFee);\\n  }\\n\\n  function _transferBetweenExcludedAccounts(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    require(\\n      accountBalances[sender] >= amount,\\n      \\\"HEROToken#24\\\"\\n    );\\n\\n    accountBalances[sender] = accountBalances[sender].sub(amount);\\n    accountBalances[recipient] = accountBalances[recipient].add(amount);\\n\\n    _emitTransfer(\\n      sender,\\n      recipient,\\n      amount\\n    );\\n  }\\n\\n  function _emitTransfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    if (amount != 0) {\\n      emit Transfer(\\n        sender,\\n        recipient,\\n        amount\\n      );\\n    }\\n  }\\n\\n  function _increaseTotalLP(\\n    uint256 amount\\n  )\\n    private\\n  {\\n    if (amount != 0) {\\n      accountBalances[address(lpManager)] = accountBalances[address(lpManager)].add(amount);\\n\\n      summary.totalExcluded = summary.totalExcluded.add(amount);\\n    }\\n  }\\n\\n  function _syncLP(\\n    address participant,\\n    uint256 amount\\n  )\\n    private\\n  {\\n    if (\\n      amount != 0 && (\\n        participant == address(0) ||\\n        lpManager.canSyncLP(participant)\\n      )\\n    ) {\\n      lpManager.syncLP();\\n    }\\n  }\\n\\n  function _updateTotalRewards()\\n    private\\n  {\\n    uint256 totalRewards = summary.totalSupply\\n    .sub(summary.totalExcluded)\\n    .sub(summary.totalHolding);\\n\\n    if (totalRewards != summary.totalRewards) {\\n      summary.totalRewards = totalRewards;\\n\\n      emit TotalRewardsUpdated(\\n        totalRewards\\n      );\\n    }\\n  }\\n\\n  // private functions (views)\\n\\n  function _calcRewards(\\n    address account\\n  )\\n    private\\n    view\\n    returns (uint256 result)\\n  {\\n    if (\\n      !excludedAccounts[account].exists &&\\n      summary.totalRewards != 0\\n    ) {\\n      result = summary.totalRewards\\n        .mul(accountBalances[account])\\n        .div(summary.totalHolding);\\n    }\\n\\n    return result;\\n  }\\n\\n  function _calcTransferSenderFees(\\n    uint256 amount\\n  )\\n    private\\n    view\\n    returns (\\n      uint256 totalFee,\\n      uint256 burnFee,\\n      uint256 lpFee\\n    )\\n  {\\n    uint256 rewardsFee = amount.percent(settings.rewardsFees.sender);\\n\\n    lpFee = amount.percent(settings.lpFees.sender);\\n    burnFee = amount.percent(settings.burnFees.sender);\\n\\n    totalFee = lpFee.add(rewardsFee).add(burnFee);\\n\\n    return (totalFee, burnFee, lpFee);\\n  }\\n\\n  function _calcTransferRecipientFees(\\n    uint256 amount\\n  )\\n    private\\n    view\\n    returns (\\n      uint256 totalFee,\\n      uint256 burnFee,\\n      uint256 lpFee\\n    )\\n  {\\n    uint256 rewardsFee = amount.percent(settings.rewardsFees.recipient);\\n\\n    lpFee = amount.percent(settings.lpFees.recipient);\\n    burnFee = amount.percent(settings.burnFees.recipient);\\n\\n    totalFee = lpFee.add(rewardsFee).add(burnFee);\\n\\n    return (totalFee, burnFee, lpFee);\\n  }\\n}\\n\",\"keccak256\":\"0xbb8a6b6c347a16abd50dbaa2af296ba5557a3104097bbdcea388cbe4e73fa164\",\"license\":\"MIT\"},\"src/access/Controlled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\n/**\\n * @title Controlled\\n */\\ncontract Controlled {\\n  address public controller;\\n\\n  // modifiers\\n\\n  modifier onlyController() {\\n    require(\\n      msg.sender == controller,\\n      \\\"Controlled#1\\\"\\n    );\\n\\n    _;\\n  }\\n\\n  // events\\n\\n  event ControllerUpdated(\\n    address controller\\n  );\\n\\n  /**\\n   * @dev Internal constructor\\n   */\\n  constructor()\\n    internal\\n  {\\n    //\\n  }\\n\\n  // internal functions\\n\\n  function _initializeController(\\n    address controller_\\n  )\\n    internal\\n  {\\n    controller = controller_;\\n  }\\n\\n  function _setController(\\n    address controller_\\n  )\\n    internal\\n  {\\n    require(\\n      controller_ != address(0),\\n      \\\"Controlled#2\\\"\\n    );\\n\\n    require(\\n      controller_ != controller,\\n      \\\"Controlled#3\\\"\\n    );\\n\\n    controller = controller_;\\n\\n    emit ControllerUpdated(\\n      controller_\\n    );\\n  }\\n\\n  function _removeController()\\n    internal\\n  {\\n    require(\\n      controller != address(0),\\n      \\\"Controlled#4\\\"\\n    );\\n\\n    controller = address(0);\\n\\n    emit ControllerUpdated(\\n      address(0)\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0x7a17852153173274f8335812747b2b9872b740569e5b64ac241b586f48de17db\",\"license\":\"MIT\"},\"src/access/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\n/**\\n * @title Owned\\n */\\ncontract Owned {\\n  address public owner;\\n\\n  // modifiers\\n\\n  modifier onlyOwner() {\\n    require(\\n      msg.sender == owner,\\n      \\\"Owned#1\\\"\\n    );\\n\\n    _;\\n  }\\n\\n  // events\\n\\n  event OwnerUpdated(\\n    address owner\\n  );\\n\\n  /**\\n   * @dev Internal constructor\\n   */\\n  constructor()\\n    internal\\n  {\\n    owner = msg.sender;\\n  }\\n\\n  // external functions\\n\\n  function setOwner(\\n    address owner_\\n  )\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      owner_ != address(0),\\n      \\\"Owned#2\\\"\\n    );\\n\\n    require(\\n      owner_ != owner,\\n      \\\"Owned#3\\\"\\n    );\\n\\n    owner = owner_;\\n\\n    emit OwnerUpdated(\\n      owner_\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0xfc994d9233a8e6a1581dc1511d97e29d7d45fb33dc24ce1f146f5b55e62e8d58\",\"license\":\"MIT\"},\"src/erc20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\nimport \\\"./ERC20Metadata.sol\\\";\\nimport \\\"./ERC20Standard.sol\\\";\\n\\n\\nabstract contract ERC20 is ERC20Metadata, ERC20Standard {\\n  string public override name;\\n  string public override symbol;\\n  uint8 public override decimals;\\n\\n  /**\\n   * @dev Internal constructor\\n   */\\n  constructor (\\n    string memory name_,\\n    string memory symbol_,\\n    uint8 decimals_\\n  )\\n    internal\\n  {\\n    name = name_;\\n    symbol = symbol_;\\n    decimals = decimals_;\\n  }\\n}\\n\",\"keccak256\":\"0x263e909b5aacdfe0efbb513c92a36909d7ec7bb29310a56366e4006e893f077b\",\"license\":\"MIT\"},\"src/erc20/ERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\ninterface ERC20Metadata {\\n  // external functions (pure)\\n\\n  function name()\\n    external\\n    pure\\n    returns (string memory);\\n\\n  function symbol()\\n    external\\n    pure\\n    returns (string memory);\\n\\n  function decimals()\\n    external\\n    pure\\n    returns (uint8);\\n}\\n\",\"keccak256\":\"0xb9f2b7768748bb9daef7fb378aa85e04ce735a3577aa7c99b2c46c3d09301ca2\",\"license\":\"MIT\"},\"src/erc20/ERC20Standard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\ninterface ERC20Standard {\\n  // events\\n\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint256 value\\n  );\\n\\n  event Transfer(\\n    address indexed from,\\n    address indexed to,\\n    uint256 value\\n  );\\n\\n  // external functions\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    external\\n    returns (bool);\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (bool);\\n\\n  // external functions (views)\\n\\n  function totalSupply()\\n    external\\n    view\\n    returns (uint256);\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (uint256);\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    returns (uint256);\\n}\\n\",\"keccak256\":\"0x97bfb18accd6fac80fc5c560cdf3b15b55be42dead5488f10db8aa9fffa34f56\",\"license\":\"MIT\"},\"src/lifecycle/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\n/**\\n * @title Initializable\\n */\\ncontract Initializable {\\n  address private initializer;\\n\\n  // events\\n\\n  event Initialized();\\n\\n  // modifiers\\n\\n  modifier onlyInitializer() {\\n    require(\\n      initializer != address(0),\\n      \\\"Initializable#1\\\"\\n    );\\n\\n    require(\\n      msg.sender == initializer,\\n      \\\"Initializable#2\\\"\\n    );\\n\\n    initializer = address(0);\\n\\n    _;\\n\\n    emit Initialized();\\n  }\\n\\n  /**\\n   * @dev Internal constructor\\n   */\\n  constructor()\\n    internal\\n  {\\n    initializer = msg.sender;\\n  }\\n\\n  // external functions (views)\\n\\n  function initialized()\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return initializer == address(0);\\n  }\\n}\\n\",\"keccak256\":\"0xe69c4567bd1e4564e316eaf1a36387a29dae6babc31ed4c21f0306e4b0ea1750\",\"license\":\"MIT\"},\"src/math/MathLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\n\\n/**\\n * @title Math library\\n */\\nlibrary MathLib {\\n  function add(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    uint256 c = a + b;\\n\\n    require(\\n      c >= a,\\n      \\\"MathLib#1\\\"\\n    );\\n\\n    return c;\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    require(\\n      b <= a,\\n      \\\"MathLib#2\\\"\\n    );\\n\\n    return a - b;\\n  }\\n\\n  function mul(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256 result)\\n  {\\n    if (a != 0 && b != 0) {\\n      result = a * b;\\n\\n      require(\\n        result / a == b,\\n        \\\"MathLib#3\\\"\\n      );\\n    }\\n\\n    return result;\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b\\n  )\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    require(\\n      b != 0,\\n      \\\"MathLib#4\\\"\\n    );\\n\\n    return a / b;\\n  }\\n\\n  function percent(\\n    uint256 a,\\n    uint256 p\\n  )\\n    internal\\n    pure\\n    returns (uint256 result)\\n  {\\n    if (a != 0 && p != 0) {\\n      result = div(mul(a, p), 100);\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0xe95188bae28c1dcdff8bb625bb6be7fcfb346186a5af3d92cffcb72402f8415f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f4d6574616865726f0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4845524f00000000000000000000000000000000000000000000000000000000815250601233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260029080519060200190620000d992919062000158565b508160039080519060200190620000f292919062000158565b5080600460006101000a81548160ff021916908360ff16021790555050505033600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001fe565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019b57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cb578251825591602001919060010190620001ae565b5b509050620001db9190620001df565b5090565b5b80821115620001fa576000816000905550600101620001e0565b5090565b61480a806200020e6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636ea41454116100c3578063a9059cbb1161007c578063a9059cbb1461037c578063b16a867c146103ac578063b906f15a146103cd578063dd62ed3e146103eb578063e06174e41461041b578063f77c47911461043b5761014d565b80636ea41454146102cc57806370a08231146102e85780638da5cb5b1461031857806390b5e6d91461033657806395d89b4114610354578063974654c6146103725761014d565b80632197fb25116101155780632197fb25146101f857806323b872dd146102145780632d38031514610244578063313ce5671461027657806340c10f191461029457806342966c68146102b05761014d565b806306fdde0314610152578063095ea7b31461017057806313af4035146101a0578063158ef93e146101bc57806318160ddd146101da575b600080fd5b61015a610459565b604051610167919061413e565b60405180910390f35b61018a60048036038101906101859190613637565b6104f7565b60405161019791906140df565b60405180910390f35b6101ba60048036038101906101b59190613534565b61050e565b005b6101c461071a565b6040516101d191906140df565b60405180910390f35b6101e2610772565b6040516101ef91906145d7565b60405180910390f35b610212600480360381019061020d91906135e8565b61077f565b005b61022e60048036038101906102299190613599565b61081f565b60405161023b91906140df565b60405180910390f35b61025e60048036038101906102599190613534565b610919565b60405161026d939291906145f2565b60405180910390f35b61027e610987565b60405161028b919061466e565b60405180910390f35b6102ae60048036038101906102a99190613637565b61099a565b005b6102ca60048036038101906102c59190613759565b610a36565b005b6102e660048036038101906102e1919061369c565b610a43565b005b61030260048036038101906102fd9190613534565b610d86565b60405161030f91906145d7565b60405180910390f35b610320610de9565b60405161032d91906140c4565b60405180910390f35b61033e610e0f565b60405161034b91906140df565b60405180910390f35b61035c610e22565b604051610369919061413e565b60405180910390f35b61037a610ec0565b005b61039660048036038101906103919190613637565b610fe9565b6040516103a391906140df565b60405180910390f35b6103b4611000565b6040516103c49493929190614629565b60405180910390f35b6103d561101e565b6040516103e29190614123565b60405180910390f35b6104056004803603810190610400919061355d565b611044565b60405161041291906145d7565b60405180910390f35b6104236110cb565b604051610432939291906145a0565b60405180910390f35b61044361113d565b60405161045091906140c4565b60405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ef5780601f106104c4576101008083540402835291602001916104ef565b820191906000526020600020905b8154815290600101906020018083116104d257829003601f168201915b505050505081565b6000610504338484611161565b6001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590614540565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610605906144c0565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690614460565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b8160405161070f91906140c4565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c60030154905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080690614540565b60405180910390fd5b61081a83838361132c565b505050565b600061082c848484611785565b6000601260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790614420565b60405180910390fd5b61090d85336109088685611c0c90919063ffffffff16565b611161565b60019150509392505050565b6000806000601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061096984611c5c565b905061097e8183611d3c90919063ffffffff16565b92509193909250565b600460009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f906144e0565b60405180910390fd5b610a328282611d91565b5050565b610a403382611fbb565b50565b600073ffffffffffffffffffffffffffffffffffffffff16600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc906143e0565b60405180910390fd5b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c906143a0565b60405180910390fd5b6000600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600660000160008201518160000155602082015181600101559050508660066002016000820151816000015560208201518160010155905050856006600401600082015181600001556020820151816001015590505060008760000151141580610c1757506000876020015114155b15610cda57600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8390614520565b60405180910390fd5b84600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cd98560008061132c565b5b610ce384612267565b60008314610d0257610cf73360018061132c565b610d013384611d91565b5b600082829050905060005b81811015610d4e57610d41848483818110610d2457fe5b9050602002016020810190610d399190613534565b60008061132c565b8080600101915050610d0d565b50507f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c860405160405180910390a15050505050505050565b6000610de2610d9483611c5c565b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060009054906101000a900460ff1681565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4790614540565b60405180910390fd5b601060009054906101000a900460ff1615610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f97906142c0565b60405180910390fd5b6001601060006101000a81548160ff0219169083151502179055507f0b5ca8ee9a23a12c9bb341511e83987d73bee14e96dc855aeaea8840c54ea0bd60405160405180910390a1565b6000610ff6338484611785565b6001905092915050565b600c8060000154908060010154908060020154908060030154905084565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60068060000160405180604001604052908160008201548152602001600182015481525050908060020160405180604001604052908160008201548152602001600182015481525050908060040160405180604001604052908160008201548152602001600182015481525050905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c8906144a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123890614280565b60405180910390fd5b80601260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161131f91906145d7565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561139c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611393906142a0565b60405180910390fd5b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561159e57811515601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615151415806114a65750801515601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff16151514155b6114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc906141e0565b60405180910390fd5b81601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555080601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160026101000a81548160ff021916908315150217905550611730565b6000601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161790614480565b60405180910390fd5b6001601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555080601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160026101000a81548160ff0219169083151502179055505b8273ffffffffffffffffffffffffffffffffffffffff167f32007f1d99093107aa587b30e94adbad373aaa061b0ed208485221eecf52ac2183836040516117789291906140fa565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156117f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ec90614440565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c906143c0565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cb90614400565b60405180910390fd5b6000811415611918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190f90614340565b60405180910390fd5b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff168061197f5750601060009054906101000a900460ff165b6119be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b590614560565b60405180910390fd5b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16158015611a685750601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16155b15611a7d57611a788383836122aa565b611c07565b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff168015611b265750601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16155b15611b3b57611b36838383612693565b611c06565b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16158015611be45750601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff165b15611bf957611bf4838383612990565b611c05565b611c04838383612ce9565b5b5b5b505050565b600082821115611c51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c48906141c0565b60405180910390fd5b818303905092915050565b6000601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16158015611cc157506000600c6002015414155b15611d3757611d34600c60010154611d26601160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600c60020154612ea590919063ffffffff16565b612f1490919063ffffffff16565b90505b919050565b600080828401905083811015611d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7e90614220565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df890614380565b60405180910390fd5b6000811415611e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3c90614320565b60405180910390fd5b601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ecb90614240565b60405180910390fd5b611eec81600c60030154611d3c90919063ffffffff16565b600c60030181905550611f0d81600c60000154611d3c90919063ffffffff16565b600c60000181905550611f6881601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611fb760008383612f6b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561202b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612022906141a0565b60405180910390fd5b600081141561206f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206690614500565b60405180910390fd5b80601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156120f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e890614580565b60405180910390fd5b601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16612180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161217790614200565b60405180910390fd5b6121d281601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061222d81600c60030154611c0c90919063ffffffff16565b600c6003018190555061224e81600c60000154611c0c90919063ffffffff16565b600c6000018190555061226382600083612f6b565b5050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806000806000806000806122c28b612fde565b809a50819b508294505050506122d78b61306a565b8097508198508293505050506122f68183611d3c90919063ffffffff16565b935061230b8589611d3c90919063ffffffff16565b9250612320828c611d3c90919063ffffffff16565b9950612335818c611c0c90919063ffffffff16565b965050506000600c60020154146123ed576000612365600c60020154600c60010154611d3c90919063ffffffff16565b905061239181612383600c600101548c612ea590919063ffffffff16565b612f1490919063ffffffff16565b98506123bd816123af600c6001015489612ea590919063ffffffff16565b612f1490919063ffffffff16565b95506123e9816123db600c6001015486612ea590919063ffffffff16565b612f1490919063ffffffff16565b9250505b87601160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561246f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246690614300565b60405180910390fd5b6124c188601160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061255685601160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125a48b8b8b612f6b565b6125b08b600089612f6b565b6125dd8b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688612f6b565b6125e98a600086612f6b565b6126168a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685612f6b565b6126408461263289600c60030154611c0c90919063ffffffff16565b611c0c90919063ffffffff16565b600c6003018190555061266182600c60010154611c0c90919063ffffffff16565b600c60010181905550612673816130f6565b61267b6131fc565b612686600082613285565b5050505050505050505050565b80601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161270c90614260565b60405180910390fd5b6000806000601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff16612784576127778461306a565b8093508194508295505050505b60006127998486611c0c90919063ffffffff16565b90506127ed85601160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061288281601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506128d0878787612f6b565b6128dc86600085612f6b565b61290986600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612f6b565b61292183600c60030154611c0c90919063ffffffff16565b600c6003018190555061294285600c60000154611c0c90919063ffffffff16565b600c6000018190555061296381600c60010154611d3c90919063ffffffff16565b600c60010181905550612975826130f6565b61297d6131fc565b6129878783613285565b50505050505050565b6000806000601360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166129ff576129f284612fde565b8093508194508295505050505b6000612a148486611d3c90919063ffffffff16565b90506000600c6002015414612a72576000612a42600c60020154600c60010154611d3c90919063ffffffff16565b9050612a6e81612a60600c6001015485612ea590919063ffffffff16565b612f1490919063ffffffff16565b9150505b80601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aeb90614160565b60405180910390fd5b612b4681601160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612bdb85601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c29878787612f6b565b612c3587600085612f6b565b612c6287600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612f6b565b612c7a83600c60030154611c0c90919063ffffffff16565b600c60030181905550612c9b85600c60000154611d3c90919063ffffffff16565b600c60000181905550612cbc81600c60010154611c0c90919063ffffffff16565b600c60010181905550612cce826130f6565b612cd66131fc565b612ce08683613285565b50505050505050565b80601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d6290614360565b60405180910390fd5b612dbd81601160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612e5281601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ea0838383612f6b565b505050565b6000808314158015612eb8575060008214155b15612f0e57818302905081838281612ecc57fe5b0414612f0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f04906142e0565b60405180910390fd5b5b92915050565b600080821415612f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f5090614180565b60405180910390fd5b818381612f6257fe5b04905092915050565b60008114612fd9578173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612fd091906145d7565b60405180910390a35b505050565b600080600080612fff6006600401600001548661340090919063ffffffff16565b905061301c6006600201600001548661340090919063ffffffff16565b91506130396006600001600001548661340090919063ffffffff16565b9250613060836130528385611d3c90919063ffffffff16565b611d3c90919063ffffffff16565b9350509193909250565b60008060008061308b6006600401600101548661340090919063ffffffff16565b90506130a86006600201600101548661340090919063ffffffff16565b91506130c56006600001600101548661340090919063ffffffff16565b92506130ec836130de8385611d3c90919063ffffffff16565b611d3c90919063ffffffff16565b9350509193909250565b600081146131f9576131728160116000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b60116000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506131ef81600c60000154611d3c90919063ffffffff16565b600c600001819055505b50565b6000613232600c60010154613224600c60000154600c60030154611c0c90919063ffffffff16565b611c0c90919063ffffffff16565b9050600c6002015481146132825780600c600201819055507f8629690313970e9e42939fc905246bd1ff3a69dae5efc961f8b40a91a838dffe8160405161327991906145d7565b60405180910390a15b50565b600081141580156133745750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806133735750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11c9c5836040518263ffffffff1660e01b815260040161332291906140c4565b60206040518083038186803b15801561333a57600080fd5b505afa15801561334e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133729190613673565b5b5b156133fc57600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339071c9e6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156133e357600080fd5b505af11580156133f7573d6000803e3d6000fd5b505050505b5050565b6000808314158015613413575060008214155b1561342f5761342c6134258484612ea5565b6064612f14565b90505b92915050565b600081359050613444816147a1565b92915050565b600081359050613459816147b8565b92915050565b60008083601f84011261347157600080fd5b8235905067ffffffffffffffff81111561348a57600080fd5b6020830191508360208202830111156134a257600080fd5b9250929050565b6000813590506134b8816147cf565b92915050565b6000815190506134cd816147cf565b92915050565b6000604082840312156134e557600080fd5b6134ef6040614689565b905060006134ff8482850161351f565b60008301525060206135138482850161351f565b60208301525092915050565b60008135905061352e816147e6565b92915050565b60006020828403121561354657600080fd5b600061355484828501613435565b91505092915050565b6000806040838503121561357057600080fd5b600061357e85828601613435565b925050602061358f85828601613435565b9150509250929050565b6000806000606084860312156135ae57600080fd5b60006135bc86828701613435565b93505060206135cd86828701613435565b92505060406135de8682870161351f565b9150509250925092565b6000806000606084860312156135fd57600080fd5b600061360b86828701613435565b935050602061361c868287016134a9565b925050604061362d868287016134a9565b9150509250925092565b6000806040838503121561364a57600080fd5b600061365885828601613435565b92505060206136698582860161351f565b9150509250929050565b60006020828403121561368557600080fd5b6000613693848285016134be565b91505092915050565b600080600080600080600080610140898b0312156136b957600080fd5b60006136c78b828c016134d3565b98505060406136d88b828c016134d3565b97505060806136e98b828c016134d3565b96505060c06136fa8b828c0161344a565b95505060e061370b8b828c01613435565b94505061010061371d8b828c0161351f565b93505061012089013567ffffffffffffffff81111561373b57600080fd5b6137478b828c0161345f565b92509250509295985092959890939650565b60006020828403121561376b57600080fd5b60006137798482850161351f565b91505092915050565b61378b816146d2565b82525050565b61379a816146f6565b82525050565b6137a981614739565b82525050565b60006137ba826146b6565b6137c481856146c1565b93506137d481856020860161475d565b6137dd81614790565b840191505092915050565b60006137f5600c836146c1565b91507f4845524f546f6b656e23323300000000000000000000000000000000000000006000830152602082019050919050565b60006138356009836146c1565b91507f4d6174684c6962233400000000000000000000000000000000000000000000006000830152602082019050919050565b6000613875600c836146c1565b91507f4845524f546f6b656e23313200000000000000000000000000000000000000006000830152602082019050919050565b60006138b56009836146c1565b91507f4d6174684c6962233200000000000000000000000000000000000000000000006000830152602082019050919050565b60006138f5600b836146c1565b91507f4845524f546f6b656e23350000000000000000000000000000000000000000006000830152602082019050919050565b6000613935600c836146c1565b91507f4845524f546f6b656e23313500000000000000000000000000000000000000006000830152602082019050919050565b60006139756009836146c1565b91507f4d6174684c6962233100000000000000000000000000000000000000000000006000830152602082019050919050565b60006139b5600c836146c1565b91507f4845524f546f6b656e23313100000000000000000000000000000000000000006000830152602082019050919050565b60006139f5600c836146c1565b91507f4845524f546f6b656e23323200000000000000000000000000000000000000006000830152602082019050919050565b6000613a35600b836146c1565b91507f4845524f546f6b656e23380000000000000000000000000000000000000000006000830152602082019050919050565b6000613a75600b836146c1565b91507f4845524f546f6b656e23340000000000000000000000000000000000000000006000830152602082019050919050565b6000613ab5600b836146c1565b91507f4845524f546f6b656e23320000000000000000000000000000000000000000006000830152602082019050919050565b6000613af56009836146c1565b91507f4d6174684c6962233300000000000000000000000000000000000000000000006000830152602082019050919050565b6000613b35600c836146c1565b91507f4845524f546f6b656e23323100000000000000000000000000000000000000006000830152602082019050919050565b6000613b75600c836146c1565b91507f4845524f546f6b656e23313000000000000000000000000000000000000000006000830152602082019050919050565b6000613bb5600c836146c1565b91507f4845524f546f6b656e23313900000000000000000000000000000000000000006000830152602082019050919050565b6000613bf5600c836146c1565b91507f4845524f546f6b656e23323400000000000000000000000000000000000000006000830152602082019050919050565b6000613c35600b836146c1565b91507f4845524f546f6b656e23390000000000000000000000000000000000000000006000830152602082019050919050565b6000613c75600f836146c1565b91507f496e697469616c697a61626c65233200000000000000000000000000000000006000830152602082019050919050565b6000613cb5600c836146c1565b91507f4845524f546f6b656e23313700000000000000000000000000000000000000006000830152602082019050919050565b6000613cf5600f836146c1565b91507f496e697469616c697a61626c65233100000000000000000000000000000000006000830152602082019050919050565b6000613d35600c836146c1565b91507f4845524f546f6b656e23313800000000000000000000000000000000000000006000830152602082019050919050565b6000613d75600b836146c1565b91507f4845524f546f6b656e23330000000000000000000000000000000000000000006000830152602082019050919050565b6000613db5600c836146c1565b91507f4845524f546f6b656e23313600000000000000000000000000000000000000006000830152602082019050919050565b6000613df56007836146c1565b91507f4f776e65642333000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613e35600b836146c1565b91507f4845524f546f6b656e23360000000000000000000000000000000000000000006000830152602082019050919050565b6000613e75600b836146c1565b91507f4845524f546f6b656e23370000000000000000000000000000000000000000006000830152602082019050919050565b6000613eb56007836146c1565b91507f4f776e65642332000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613ef5600c836146c1565b91507f436f6e74726f6c6c6564233100000000000000000000000000000000000000006000830152602082019050919050565b6000613f35600c836146c1565b91507f4845524f546f6b656e23313300000000000000000000000000000000000000006000830152602082019050919050565b6000613f75600b836146c1565b91507f4845524f546f6b656e23310000000000000000000000000000000000000000006000830152602082019050919050565b6000613fb56007836146c1565b91507f4f776e65642331000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613ff5600c836146c1565b91507f4845524f546f6b656e23323000000000000000000000000000000000000000006000830152602082019050919050565b6000614035600c836146c1565b91507f4845524f546f6b656e23313400000000000000000000000000000000000000006000830152602082019050919050565b60408201600082015161407e6000850182614097565b5060208201516140916020850182614097565b50505050565b6140a081614722565b82525050565b6140af81614722565b82525050565b6140be8161472c565b82525050565b60006020820190506140d96000830184613782565b92915050565b60006020820190506140f46000830184613791565b92915050565b600060408201905061410f6000830185613791565b61411c6020830184613791565b9392505050565b600060208201905061413860008301846137a0565b92915050565b6000602082019050818103600083015261415881846137af565b905092915050565b60006020820190508181036000830152614179816137e8565b9050919050565b6000602082019050818103600083015261419981613828565b9050919050565b600060208201905081810360008301526141b981613868565b9050919050565b600060208201905081810360008301526141d9816138a8565b9050919050565b600060208201905081810360008301526141f9816138e8565b9050919050565b6000602082019050818103600083015261421981613928565b9050919050565b6000602082019050818103600083015261423981613968565b9050919050565b60006020820190508181036000830152614259816139a8565b9050919050565b60006020820190508181036000830152614279816139e8565b9050919050565b6000602082019050818103600083015261429981613a28565b9050919050565b600060208201905081810360008301526142b981613a68565b9050919050565b600060208201905081810360008301526142d981613aa8565b9050919050565b600060208201905081810360008301526142f981613ae8565b9050919050565b6000602082019050818103600083015261431981613b28565b9050919050565b6000602082019050818103600083015261433981613b68565b9050919050565b6000602082019050818103600083015261435981613ba8565b9050919050565b6000602082019050818103600083015261437981613be8565b9050919050565b6000602082019050818103600083015261439981613c28565b9050919050565b600060208201905081810360008301526143b981613c68565b9050919050565b600060208201905081810360008301526143d981613ca8565b9050919050565b600060208201905081810360008301526143f981613ce8565b9050919050565b6000602082019050818103600083015261441981613d28565b9050919050565b6000602082019050818103600083015261443981613d68565b9050919050565b6000602082019050818103600083015261445981613da8565b9050919050565b6000602082019050818103600083015261447981613de8565b9050919050565b6000602082019050818103600083015261449981613e28565b9050919050565b600060208201905081810360008301526144b981613e68565b9050919050565b600060208201905081810360008301526144d981613ea8565b9050919050565b600060208201905081810360008301526144f981613ee8565b9050919050565b6000602082019050818103600083015261451981613f28565b9050919050565b6000602082019050818103600083015261453981613f68565b9050919050565b6000602082019050818103600083015261455981613fa8565b9050919050565b6000602082019050818103600083015261457981613fe8565b9050919050565b6000602082019050818103600083015261459981614028565b9050919050565b600060c0820190506145b56000830186614068565b6145c26040830185614068565b6145cf6080830184614068565b949350505050565b60006020820190506145ec60008301846140a6565b92915050565b600060608201905061460760008301866140a6565b61461460208301856140a6565b61462160408301846140a6565b949350505050565b600060808201905061463e60008301876140a6565b61464b60208301866140a6565b61465860408301856140a6565b61466560608301846140a6565b95945050505050565b600060208201905061468360008301846140b5565b92915050565b6000604051905081810181811067ffffffffffffffff821117156146ac57600080fd5b8060405250919050565b600081519050919050565b600082825260208201905092915050565b60006146dd82614702565b9050919050565b60006146ef82614702565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006147448261474b565b9050919050565b600061475682614702565b9050919050565b60005b8381101561477b578082015181840152602081019050614760565b8381111561478a576000848401525b50505050565b6000601f19601f8301169050919050565b6147aa816146d2565b81146147b557600080fd5b50565b6147c1816146e4565b81146147cc57600080fd5b50565b6147d8816146f6565b81146147e357600080fd5b50565b6147ef81614722565b81146147fa57600080fd5b5056fea164736f6c634300060c000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80636ea41454116100c3578063a9059cbb1161007c578063a9059cbb1461037c578063b16a867c146103ac578063b906f15a146103cd578063dd62ed3e146103eb578063e06174e41461041b578063f77c47911461043b5761014d565b80636ea41454146102cc57806370a08231146102e85780638da5cb5b1461031857806390b5e6d91461033657806395d89b4114610354578063974654c6146103725761014d565b80632197fb25116101155780632197fb25146101f857806323b872dd146102145780632d38031514610244578063313ce5671461027657806340c10f191461029457806342966c68146102b05761014d565b806306fdde0314610152578063095ea7b31461017057806313af4035146101a0578063158ef93e146101bc57806318160ddd146101da575b600080fd5b61015a610459565b604051610167919061413e565b60405180910390f35b61018a60048036038101906101859190613637565b6104f7565b60405161019791906140df565b60405180910390f35b6101ba60048036038101906101b59190613534565b61050e565b005b6101c461071a565b6040516101d191906140df565b60405180910390f35b6101e2610772565b6040516101ef91906145d7565b60405180910390f35b610212600480360381019061020d91906135e8565b61077f565b005b61022e60048036038101906102299190613599565b61081f565b60405161023b91906140df565b60405180910390f35b61025e60048036038101906102599190613534565b610919565b60405161026d939291906145f2565b60405180910390f35b61027e610987565b60405161028b919061466e565b60405180910390f35b6102ae60048036038101906102a99190613637565b61099a565b005b6102ca60048036038101906102c59190613759565b610a36565b005b6102e660048036038101906102e1919061369c565b610a43565b005b61030260048036038101906102fd9190613534565b610d86565b60405161030f91906145d7565b60405180910390f35b610320610de9565b60405161032d91906140c4565b60405180910390f35b61033e610e0f565b60405161034b91906140df565b60405180910390f35b61035c610e22565b604051610369919061413e565b60405180910390f35b61037a610ec0565b005b61039660048036038101906103919190613637565b610fe9565b6040516103a391906140df565b60405180910390f35b6103b4611000565b6040516103c49493929190614629565b60405180910390f35b6103d561101e565b6040516103e29190614123565b60405180910390f35b6104056004803603810190610400919061355d565b611044565b60405161041291906145d7565b60405180910390f35b6104236110cb565b604051610432939291906145a0565b60405180910390f35b61044361113d565b60405161045091906140c4565b60405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ef5780601f106104c4576101008083540402835291602001916104ef565b820191906000526020600020905b8154815290600101906020018083116104d257829003601f168201915b505050505081565b6000610504338484611161565b6001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590614540565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610605906144c0565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690614460565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b8160405161070f91906140c4565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c60030154905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080690614540565b60405180910390fd5b61081a83838361132c565b505050565b600061082c848484611785565b6000601260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790614420565b60405180910390fd5b61090d85336109088685611c0c90919063ffffffff16565b611161565b60019150509392505050565b6000806000601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061096984611c5c565b905061097e8183611d3c90919063ffffffff16565b92509193909250565b600460009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f906144e0565b60405180910390fd5b610a328282611d91565b5050565b610a403382611fbb565b50565b600073ffffffffffffffffffffffffffffffffffffffff16600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc906143e0565b60405180910390fd5b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c906143a0565b60405180910390fd5b6000600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600660000160008201518160000155602082015181600101559050508660066002016000820151816000015560208201518160010155905050856006600401600082015181600001556020820151816001015590505060008760000151141580610c1757506000876020015114155b15610cda57600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8390614520565b60405180910390fd5b84600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cd98560008061132c565b5b610ce384612267565b60008314610d0257610cf73360018061132c565b610d013384611d91565b5b600082829050905060005b81811015610d4e57610d41848483818110610d2457fe5b9050602002016020810190610d399190613534565b60008061132c565b8080600101915050610d0d565b50507f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c860405160405180910390a15050505050505050565b6000610de2610d9483611c5c565b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060009054906101000a900460ff1681565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4790614540565b60405180910390fd5b601060009054906101000a900460ff1615610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f97906142c0565b60405180910390fd5b6001601060006101000a81548160ff0219169083151502179055507f0b5ca8ee9a23a12c9bb341511e83987d73bee14e96dc855aeaea8840c54ea0bd60405160405180910390a1565b6000610ff6338484611785565b6001905092915050565b600c8060000154908060010154908060020154908060030154905084565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60068060000160405180604001604052908160008201548152602001600182015481525050908060020160405180604001604052908160008201548152602001600182015481525050908060040160405180604001604052908160008201548152602001600182015481525050905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c8906144a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123890614280565b60405180910390fd5b80601260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161131f91906145d7565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561139c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611393906142a0565b60405180910390fd5b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561159e57811515601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615151415806114a65750801515601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff16151514155b6114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc906141e0565b60405180910390fd5b81601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555080601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160026101000a81548160ff021916908315150217905550611730565b6000601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161790614480565b60405180910390fd5b6001601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555080601360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160026101000a81548160ff0219169083151502179055505b8273ffffffffffffffffffffffffffffffffffffffff167f32007f1d99093107aa587b30e94adbad373aaa061b0ed208485221eecf52ac2183836040516117789291906140fa565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156117f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ec90614440565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c906143c0565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cb90614400565b60405180910390fd5b6000811415611918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190f90614340565b60405180910390fd5b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff168061197f5750601060009054906101000a900460ff165b6119be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b590614560565b60405180910390fd5b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16158015611a685750601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16155b15611a7d57611a788383836122aa565b611c07565b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff168015611b265750601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16155b15611b3b57611b36838383612693565b611c06565b601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16158015611be45750601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff165b15611bf957611bf4838383612990565b611c05565b611c04838383612ce9565b5b5b5b505050565b600082821115611c51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c48906141c0565b60405180910390fd5b818303905092915050565b6000601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16158015611cc157506000600c6002015414155b15611d3757611d34600c60010154611d26601160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600c60020154612ea590919063ffffffff16565b612f1490919063ffffffff16565b90505b919050565b600080828401905083811015611d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7e90614220565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df890614380565b60405180910390fd5b6000811415611e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3c90614320565b60405180910390fd5b601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ecb90614240565b60405180910390fd5b611eec81600c60030154611d3c90919063ffffffff16565b600c60030181905550611f0d81600c60000154611d3c90919063ffffffff16565b600c60000181905550611f6881601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611fb760008383612f6b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561202b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612022906141a0565b60405180910390fd5b600081141561206f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206690614500565b60405180910390fd5b80601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156120f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e890614580565b60405180910390fd5b601360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16612180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161217790614200565b60405180910390fd5b6121d281601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061222d81600c60030154611c0c90919063ffffffff16565b600c6003018190555061224e81600c60000154611c0c90919063ffffffff16565b600c6000018190555061226382600083612f6b565b5050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806000806000806000806122c28b612fde565b809a50819b508294505050506122d78b61306a565b8097508198508293505050506122f68183611d3c90919063ffffffff16565b935061230b8589611d3c90919063ffffffff16565b9250612320828c611d3c90919063ffffffff16565b9950612335818c611c0c90919063ffffffff16565b965050506000600c60020154146123ed576000612365600c60020154600c60010154611d3c90919063ffffffff16565b905061239181612383600c600101548c612ea590919063ffffffff16565b612f1490919063ffffffff16565b98506123bd816123af600c6001015489612ea590919063ffffffff16565b612f1490919063ffffffff16565b95506123e9816123db600c6001015486612ea590919063ffffffff16565b612f1490919063ffffffff16565b9250505b87601160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561246f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246690614300565b60405180910390fd5b6124c188601160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061255685601160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125a48b8b8b612f6b565b6125b08b600089612f6b565b6125dd8b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688612f6b565b6125e98a600086612f6b565b6126168a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685612f6b565b6126408461263289600c60030154611c0c90919063ffffffff16565b611c0c90919063ffffffff16565b600c6003018190555061266182600c60010154611c0c90919063ffffffff16565b600c60010181905550612673816130f6565b61267b6131fc565b612686600082613285565b5050505050505050505050565b80601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161270c90614260565b60405180910390fd5b6000806000601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff16612784576127778461306a565b8093508194508295505050505b60006127998486611c0c90919063ffffffff16565b90506127ed85601160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061288281601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506128d0878787612f6b565b6128dc86600085612f6b565b61290986600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612f6b565b61292183600c60030154611c0c90919063ffffffff16565b600c6003018190555061294285600c60000154611c0c90919063ffffffff16565b600c6000018190555061296381600c60010154611d3c90919063ffffffff16565b600c60010181905550612975826130f6565b61297d6131fc565b6129878783613285565b50505050505050565b6000806000601360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166129ff576129f284612fde565b8093508194508295505050505b6000612a148486611d3c90919063ffffffff16565b90506000600c6002015414612a72576000612a42600c60020154600c60010154611d3c90919063ffffffff16565b9050612a6e81612a60600c6001015485612ea590919063ffffffff16565b612f1490919063ffffffff16565b9150505b80601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aeb90614160565b60405180910390fd5b612b4681601160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612bdb85601160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c29878787612f6b565b612c3587600085612f6b565b612c6287600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612f6b565b612c7a83600c60030154611c0c90919063ffffffff16565b600c60030181905550612c9b85600c60000154611d3c90919063ffffffff16565b600c60000181905550612cbc81600c60010154611c0c90919063ffffffff16565b600c60010181905550612cce826130f6565b612cd66131fc565b612ce08683613285565b50505050505050565b80601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d6290614360565b60405180910390fd5b612dbd81601160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c0c90919063ffffffff16565b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612e5281601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ea0838383612f6b565b505050565b6000808314158015612eb8575060008214155b15612f0e57818302905081838281612ecc57fe5b0414612f0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f04906142e0565b60405180910390fd5b5b92915050565b600080821415612f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f5090614180565b60405180910390fd5b818381612f6257fe5b04905092915050565b60008114612fd9578173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612fd091906145d7565b60405180910390a35b505050565b600080600080612fff6006600401600001548661340090919063ffffffff16565b905061301c6006600201600001548661340090919063ffffffff16565b91506130396006600001600001548661340090919063ffffffff16565b9250613060836130528385611d3c90919063ffffffff16565b611d3c90919063ffffffff16565b9350509193909250565b60008060008061308b6006600401600101548661340090919063ffffffff16565b90506130a86006600201600101548661340090919063ffffffff16565b91506130c56006600001600101548661340090919063ffffffff16565b92506130ec836130de8385611d3c90919063ffffffff16565b611d3c90919063ffffffff16565b9350509193909250565b600081146131f9576131728160116000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d3c90919063ffffffff16565b60116000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506131ef81600c60000154611d3c90919063ffffffff16565b600c600001819055505b50565b6000613232600c60010154613224600c60000154600c60030154611c0c90919063ffffffff16565b611c0c90919063ffffffff16565b9050600c6002015481146132825780600c600201819055507f8629690313970e9e42939fc905246bd1ff3a69dae5efc961f8b40a91a838dffe8160405161327991906145d7565b60405180910390a15b50565b600081141580156133745750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806133735750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11c9c5836040518263ffffffff1660e01b815260040161332291906140c4565b60206040518083038186803b15801561333a57600080fd5b505afa15801561334e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133729190613673565b5b5b156133fc57600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339071c9e6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156133e357600080fd5b505af11580156133f7573d6000803e3d6000fd5b505050505b5050565b6000808314158015613413575060008214155b1561342f5761342c6134258484612ea5565b6064612f14565b90505b92915050565b600081359050613444816147a1565b92915050565b600081359050613459816147b8565b92915050565b60008083601f84011261347157600080fd5b8235905067ffffffffffffffff81111561348a57600080fd5b6020830191508360208202830111156134a257600080fd5b9250929050565b6000813590506134b8816147cf565b92915050565b6000815190506134cd816147cf565b92915050565b6000604082840312156134e557600080fd5b6134ef6040614689565b905060006134ff8482850161351f565b60008301525060206135138482850161351f565b60208301525092915050565b60008135905061352e816147e6565b92915050565b60006020828403121561354657600080fd5b600061355484828501613435565b91505092915050565b6000806040838503121561357057600080fd5b600061357e85828601613435565b925050602061358f85828601613435565b9150509250929050565b6000806000606084860312156135ae57600080fd5b60006135bc86828701613435565b93505060206135cd86828701613435565b92505060406135de8682870161351f565b9150509250925092565b6000806000606084860312156135fd57600080fd5b600061360b86828701613435565b935050602061361c868287016134a9565b925050604061362d868287016134a9565b9150509250925092565b6000806040838503121561364a57600080fd5b600061365885828601613435565b92505060206136698582860161351f565b9150509250929050565b60006020828403121561368557600080fd5b6000613693848285016134be565b91505092915050565b600080600080600080600080610140898b0312156136b957600080fd5b60006136c78b828c016134d3565b98505060406136d88b828c016134d3565b97505060806136e98b828c016134d3565b96505060c06136fa8b828c0161344a565b95505060e061370b8b828c01613435565b94505061010061371d8b828c0161351f565b93505061012089013567ffffffffffffffff81111561373b57600080fd5b6137478b828c0161345f565b92509250509295985092959890939650565b60006020828403121561376b57600080fd5b60006137798482850161351f565b91505092915050565b61378b816146d2565b82525050565b61379a816146f6565b82525050565b6137a981614739565b82525050565b60006137ba826146b6565b6137c481856146c1565b93506137d481856020860161475d565b6137dd81614790565b840191505092915050565b60006137f5600c836146c1565b91507f4845524f546f6b656e23323300000000000000000000000000000000000000006000830152602082019050919050565b60006138356009836146c1565b91507f4d6174684c6962233400000000000000000000000000000000000000000000006000830152602082019050919050565b6000613875600c836146c1565b91507f4845524f546f6b656e23313200000000000000000000000000000000000000006000830152602082019050919050565b60006138b56009836146c1565b91507f4d6174684c6962233200000000000000000000000000000000000000000000006000830152602082019050919050565b60006138f5600b836146c1565b91507f4845524f546f6b656e23350000000000000000000000000000000000000000006000830152602082019050919050565b6000613935600c836146c1565b91507f4845524f546f6b656e23313500000000000000000000000000000000000000006000830152602082019050919050565b60006139756009836146c1565b91507f4d6174684c6962233100000000000000000000000000000000000000000000006000830152602082019050919050565b60006139b5600c836146c1565b91507f4845524f546f6b656e23313100000000000000000000000000000000000000006000830152602082019050919050565b60006139f5600c836146c1565b91507f4845524f546f6b656e23323200000000000000000000000000000000000000006000830152602082019050919050565b6000613a35600b836146c1565b91507f4845524f546f6b656e23380000000000000000000000000000000000000000006000830152602082019050919050565b6000613a75600b836146c1565b91507f4845524f546f6b656e23340000000000000000000000000000000000000000006000830152602082019050919050565b6000613ab5600b836146c1565b91507f4845524f546f6b656e23320000000000000000000000000000000000000000006000830152602082019050919050565b6000613af56009836146c1565b91507f4d6174684c6962233300000000000000000000000000000000000000000000006000830152602082019050919050565b6000613b35600c836146c1565b91507f4845524f546f6b656e23323100000000000000000000000000000000000000006000830152602082019050919050565b6000613b75600c836146c1565b91507f4845524f546f6b656e23313000000000000000000000000000000000000000006000830152602082019050919050565b6000613bb5600c836146c1565b91507f4845524f546f6b656e23313900000000000000000000000000000000000000006000830152602082019050919050565b6000613bf5600c836146c1565b91507f4845524f546f6b656e23323400000000000000000000000000000000000000006000830152602082019050919050565b6000613c35600b836146c1565b91507f4845524f546f6b656e23390000000000000000000000000000000000000000006000830152602082019050919050565b6000613c75600f836146c1565b91507f496e697469616c697a61626c65233200000000000000000000000000000000006000830152602082019050919050565b6000613cb5600c836146c1565b91507f4845524f546f6b656e23313700000000000000000000000000000000000000006000830152602082019050919050565b6000613cf5600f836146c1565b91507f496e697469616c697a61626c65233100000000000000000000000000000000006000830152602082019050919050565b6000613d35600c836146c1565b91507f4845524f546f6b656e23313800000000000000000000000000000000000000006000830152602082019050919050565b6000613d75600b836146c1565b91507f4845524f546f6b656e23330000000000000000000000000000000000000000006000830152602082019050919050565b6000613db5600c836146c1565b91507f4845524f546f6b656e23313600000000000000000000000000000000000000006000830152602082019050919050565b6000613df56007836146c1565b91507f4f776e65642333000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613e35600b836146c1565b91507f4845524f546f6b656e23360000000000000000000000000000000000000000006000830152602082019050919050565b6000613e75600b836146c1565b91507f4845524f546f6b656e23370000000000000000000000000000000000000000006000830152602082019050919050565b6000613eb56007836146c1565b91507f4f776e65642332000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613ef5600c836146c1565b91507f436f6e74726f6c6c6564233100000000000000000000000000000000000000006000830152602082019050919050565b6000613f35600c836146c1565b91507f4845524f546f6b656e23313300000000000000000000000000000000000000006000830152602082019050919050565b6000613f75600b836146c1565b91507f4845524f546f6b656e23310000000000000000000000000000000000000000006000830152602082019050919050565b6000613fb56007836146c1565b91507f4f776e65642331000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613ff5600c836146c1565b91507f4845524f546f6b656e23323000000000000000000000000000000000000000006000830152602082019050919050565b6000614035600c836146c1565b91507f4845524f546f6b656e23313400000000000000000000000000000000000000006000830152602082019050919050565b60408201600082015161407e6000850182614097565b5060208201516140916020850182614097565b50505050565b6140a081614722565b82525050565b6140af81614722565b82525050565b6140be8161472c565b82525050565b60006020820190506140d96000830184613782565b92915050565b60006020820190506140f46000830184613791565b92915050565b600060408201905061410f6000830185613791565b61411c6020830184613791565b9392505050565b600060208201905061413860008301846137a0565b92915050565b6000602082019050818103600083015261415881846137af565b905092915050565b60006020820190508181036000830152614179816137e8565b9050919050565b6000602082019050818103600083015261419981613828565b9050919050565b600060208201905081810360008301526141b981613868565b9050919050565b600060208201905081810360008301526141d9816138a8565b9050919050565b600060208201905081810360008301526141f9816138e8565b9050919050565b6000602082019050818103600083015261421981613928565b9050919050565b6000602082019050818103600083015261423981613968565b9050919050565b60006020820190508181036000830152614259816139a8565b9050919050565b60006020820190508181036000830152614279816139e8565b9050919050565b6000602082019050818103600083015261429981613a28565b9050919050565b600060208201905081810360008301526142b981613a68565b9050919050565b600060208201905081810360008301526142d981613aa8565b9050919050565b600060208201905081810360008301526142f981613ae8565b9050919050565b6000602082019050818103600083015261431981613b28565b9050919050565b6000602082019050818103600083015261433981613b68565b9050919050565b6000602082019050818103600083015261435981613ba8565b9050919050565b6000602082019050818103600083015261437981613be8565b9050919050565b6000602082019050818103600083015261439981613c28565b9050919050565b600060208201905081810360008301526143b981613c68565b9050919050565b600060208201905081810360008301526143d981613ca8565b9050919050565b600060208201905081810360008301526143f981613ce8565b9050919050565b6000602082019050818103600083015261441981613d28565b9050919050565b6000602082019050818103600083015261443981613d68565b9050919050565b6000602082019050818103600083015261445981613da8565b9050919050565b6000602082019050818103600083015261447981613de8565b9050919050565b6000602082019050818103600083015261449981613e28565b9050919050565b600060208201905081810360008301526144b981613e68565b9050919050565b600060208201905081810360008301526144d981613ea8565b9050919050565b600060208201905081810360008301526144f981613ee8565b9050919050565b6000602082019050818103600083015261451981613f28565b9050919050565b6000602082019050818103600083015261453981613f68565b9050919050565b6000602082019050818103600083015261455981613fa8565b9050919050565b6000602082019050818103600083015261457981613fe8565b9050919050565b6000602082019050818103600083015261459981614028565b9050919050565b600060c0820190506145b56000830186614068565b6145c26040830185614068565b6145cf6080830184614068565b949350505050565b60006020820190506145ec60008301846140a6565b92915050565b600060608201905061460760008301866140a6565b61461460208301856140a6565b61462160408301846140a6565b949350505050565b600060808201905061463e60008301876140a6565b61464b60208301866140a6565b61465860408301856140a6565b61466560608301846140a6565b95945050505050565b600060208201905061468360008301846140b5565b92915050565b6000604051905081810181811067ffffffffffffffff821117156146ac57600080fd5b8060405250919050565b600081519050919050565b600082825260208201905092915050565b60006146dd82614702565b9050919050565b60006146ef82614702565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006147448261474b565b9050919050565b600061475682614702565b9050919050565b60005b8381101561477b578082015181840152602081019050614760565b8381111561478a576000848401525b50505050565b6000601f19601f8301169050919050565b6147aa816146d2565b81146147b557600080fd5b50565b6147c1816146e4565b81146147cc57600080fd5b50565b6147d8816146f6565b81146147e357600080fd5b50565b6147ef81614722565b81146147fa57600080fd5b5056fea164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Public constructor"
      }
    },
    "title": "HERO token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3019,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "controller",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3167,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3263,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 3266,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "symbol",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 3269,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "decimals",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 3385,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "initializer",
        "offset": 1,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1336,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "lpManager",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(HEROLPManager)120"
      },
      {
        "astId": 1338,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "settings",
        "offset": 0,
        "slot": "6",
        "type": "t_struct(Settings)1309_storage"
      },
      {
        "astId": 1340,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "summary",
        "offset": 0,
        "slot": "12",
        "type": "t_struct(Summary)1318_storage"
      },
      {
        "astId": 1342,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "presaleFinished",
        "offset": 0,
        "slot": "16",
        "type": "t_bool"
      },
      {
        "astId": 1346,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "accountBalances",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1352,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "accountAllowances",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1356,
        "contract": "src/HEROToken.sol:HEROToken",
        "label": "excludedAccounts",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_struct(ExcludedAccount)1325_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(HEROLPManager)120": {
        "encoding": "inplace",
        "label": "contract HEROLPManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(ExcludedAccount)1325_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct HEROToken.ExcludedAccount)",
        "numberOfBytes": "32",
        "value": "t_struct(ExcludedAccount)1325_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ExcludedAccount)1325_storage": {
        "encoding": "inplace",
        "label": "struct HEROToken.ExcludedAccount",
        "members": [
          {
            "astId": 1320,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "exists",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1322,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "excludeSenderFromFee",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1324,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "excludeRecipientFromFee",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Fees)1302_storage": {
        "encoding": "inplace",
        "label": "struct HEROToken.Fees",
        "members": [
          {
            "astId": 1299,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1301,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "recipient",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Settings)1309_storage": {
        "encoding": "inplace",
        "label": "struct HEROToken.Settings",
        "members": [
          {
            "astId": 1304,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "burnFees",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Fees)1302_storage"
          },
          {
            "astId": 1306,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "lpFees",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Fees)1302_storage"
          },
          {
            "astId": 1308,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "rewardsFees",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(Fees)1302_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Summary)1318_storage": {
        "encoding": "inplace",
        "label": "struct HEROToken.Summary",
        "members": [
          {
            "astId": 1311,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "totalExcluded",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1313,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "totalHolding",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1315,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "totalRewards",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1317,
            "contract": "src/HEROToken.sol:HEROToken",
            "label": "totalSupply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}